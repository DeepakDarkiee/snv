# Generated by Django 4.0 on 2022-03-31 18:54

from django.db import migrations, models
import django.db.models.deletion
import gallery.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the gallery. Must be unique.', max_length=1024, unique=True, validators=[gallery.models.validate_gallery_name], verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Timestamp of last modification.', verbose_name='Modified')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Galleries',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(height_field='height', help_text='Representation of image in filesystem.', max_length=1024, upload_to=gallery.models.image_directory_path, verbose_name='Image file', width_field='width')),
                ('height', models.PositiveSmallIntegerField(blank=True, help_text='Image height. It will be populated automatically.', null=True, verbose_name='Image height')),
                ('width', models.PositiveSmallIntegerField(blank=True, help_text='Image width. It will be populated automatically.', null=True, verbose_name='Image width')),
                ('path', models.CharField(blank=True, help_text='Name of the image file (e.g. elephant.jpg).', max_length=1024, null=True, verbose_name='Path')),
                ('name', models.CharField(blank=True, help_text='Name of the image. It is generated from filename.', max_length=1024, null=True, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Timestamp of last modification.', verbose_name='Modified')),
                ('gallery', models.ForeignKey(help_text='Image belongs to gallery.', on_delete=django.db.models.deletion.CASCADE, to='gallery.gallery', verbose_name='Gallery')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of the image. It is generated from filename.', max_length=1024, null=True, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation.', verbose_name='Created')),
                ('modified', models.DateTimeField(auto_now=True, help_text='Timestamp of last modification.', verbose_name='Modified')),
                ('gallery', models.ForeignKey(help_text='Album belongs to gallery.', on_delete=django.db.models.deletion.CASCADE, to='gallery.gallery', verbose_name='Gallery')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
            },
        ),
    ]
